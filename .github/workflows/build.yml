name: Test and compile

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      # ðŸ”¹ Primer restore para preparar dependencias
      - name: Install dependencies
        run: dotnet restore

      # --- SONAR BEGIN ---
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner

      - name: SonarScanner begin
        shell: powershell
        run: >
          ${{ runner.temp }}\scanner\dotnet-sonarscanner begin
          /k:"zetacean_Backend-TestAutomation-Proof"
          /o:"zetacean"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.cs.cobertura.reportsPaths="**/TestResults/*/coverage.cobertura.xml"
      # --- SONAR BEGIN ---
      # ðŸ”¹ Segundo restore, requerido despuÃ©s de sonar-scanner begin
      - name: Restore after SonarScanner begin
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test with coverage
        run: dotnet test --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      - name: List coverage files (debug)
        run: dir /s TestResults

      # --- SONAR END ---
      - name: SonarScanner end
        shell: powershell
        run: ${{ runner.temp }}\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      # --- SONAR END ---
